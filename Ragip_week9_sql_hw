1. Nick, Ed veya Jennifer adlı oyuncuların adlarını ve soyadlarını göster
SELECT first_name, last_name 
FROM actor 
WHERE first_name IN ('Nick', 'Ed', 'Jennifer');

2. Sadece ilk adı Ed, Nick veya Jennifer olan oyuncuların soyadlarını göster
SELECT last_name 
FROM actor 
WHERE first_name IN ('Nick', 'Ed', 'Jennifer');

3. Adres tablosundan tüm detayları göster
SELECT * FROM address;

4. Adres tablosundan ilçe ve telefonu azalan düzende sıralayarak görüntüleyin
SELECT district, phone 
FROM address 
ORDER BY district DESC, phone DESC;

5. Film ve envanter tablolarından film_id'yi kullanarak film_id, film başlığı ve inventory_id'yi göster
SELECT film.film_id, film.title, inventory.inventory_id 
FROM film 
JOIN inventory ON film.film_id = inventory.film_id;

6. Envanter ve kiralama tablolarından oluşan ilk 5 satırı göster
SELECT * FROM inventory 
JOIN rental ON inventory.inventory_id = rental.inventory_id 
LIMIT 5;

7. Kiralama ve ödeme tablolarından rental_id, rental_date ve payment_id'den oluşan ilk 10 satırı, tutara göre azalan şekilde göster
SELECT rental.rental_id, rental.rental_date, payment.payment_id 
FROM rental 
JOIN payment ON rental.rental_id = payment.rental_id 
ORDER BY payment.amount DESC 
LIMIT 10;

8. Aktör tablosunda actor_id'nin boş (NULL) olduğu satırların tüm ayrıntılarını göster
SELECT * FROM actor 
WHERE actor_id IS NULL;

9. actor_id'nin boş olmadığı (NOT NULL) aktör tablosundaki satırların tüm ayrıntılarını göster
SELECT * FROM actor 
WHERE actor_id IS NOT NULL;

10. Film tablosunda boş olmayan satır sayısını bulun
SELECT COUNT(*) AS non_null_count FROM film;

11. Ödeme tablosundan toplam tutarı çıktı başlığı sum_amt olarak göster
SELECT SUM(amount) AS sum_amt FROM payment;

12. Ödeme tablosunda maksimum ve minimum tutarı gösterin
SELECT MAX(amount) AS max_amount, MIN(amount) AS min_amount FROM payment;
